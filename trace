   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
   1553/1    0.018    0.000  120.602  120.602 {built-in method builtins.exec}
        1    0.000    0.000  120.602  120.602 de_r4_pdqn_small.py:1(<module>)
        1    0.000    0.000  119.554  119.554 core.py:827(__call__)
        1    0.000    0.000  119.554  119.554 core.py:716(main)
        1    0.000    0.000  119.553  119.553 core.py:1060(invoke)
        1    0.060    0.060  119.553  119.553 core.py:572(invoke)
        1    0.130    0.130  119.492  119.492 de_r4_pdqn_small.py:44(run)
     9900    0.552    0.000   98.143    0.010 pdqn.py:393(step)
     9831    1.430    0.000   97.353    0.010 pdqn.py:409(_optimize_td_loss)
295210/128083    1.636    0.000   32.343    0.000 module.py:715(_call_impl)
    29493    2.045    0.000   21.281    0.001 pdqn_multipass.py:56(forward)
    29493    0.112    0.000   19.083    0.001 tensor.py:181(backward)
    29493    0.104    0.000   18.971    0.001 __init__.py:68(backward)
    29493   18.495    0.001   18.495    0.001 {method 'run_backward' of 'torch._C._EngineBase' objects}
19800/9900    0.053    0.000   16.708    0.002 core.py:291(step)
     9900    0.033    0.000   16.072    0.002 core.py:267(step)
     9900    1.035    0.000   16.021    0.002 de_train.py:194(step)
    19662    0.090    0.000   14.067    0.001 grad_mode.py:23(decorate_context)
    19662    0.519    0.000   13.798    0.001 adam.py:55(step)
   246055    0.541    0.000   12.916    0.000 linear.py:92(forward)
    39394    0.903    0.000   12.587    0.000 pdqn.py:119(forward)
   246055    1.241    0.000   12.211    0.000 functional.py:1669(linear)
    19662    2.400    0.000   11.105    0.001 functional.py:53(adam)
    19662    5.593    0.000    9.605    0.000 __init__.py:1(soft_update_target_network)
    19662    0.607    0.000    9.429    0.000 clip_grad.py:9(clip_grad_norm_)
   137774    0.212    0.000    9.277    0.000 functional.py:1124(relu)
   137774    9.046    0.000    9.046    0.000 {built-in method relu}
   206451    7.440    0.000    7.440    0.000 {built-in method addmm}
   629271    0.279    0.000    6.947    0.000 module.py:1068(parameters)
   629271    0.250    0.000    6.646    0.000 module.py:1092(named_parameters)
   629271    1.056    0.000    6.400    0.000 module.py:1055(_named_members)
804066/767850    0.765    0.000    5.392    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
  1032289    3.249    0.000    5.089    0.000 tensor.py:933(grad)
   185214    4.939    0.000    4.939    0.000 {built-in method numpy.array}
  2635220    1.526    0.000    4.757    0.000 overrides.py:1070(has_torch_function)
    19662    0.295    0.000    4.599    0.000 clip_grad.py:36(<listcomp>)
    39600    1.965    0.000    4.439    0.000 de_train.py:101(Weighted_Offspring2)
  1219248    1.924    0.000    4.172    0.000 tensor.py:596(__hash__)
   137634    0.664    0.000    3.490    0.000 functional.py:1211(norm)
     9901    0.261    0.000    3.470    0.000 pdqn.py:319(act)
    19662    0.184    0.000    3.208    0.000 module.py:1316(zero_grad)
  2900980    1.263    0.000    3.030    0.000 {built-in method builtins.any}
   445647    0.253    0.000    2.886    0.000 <__array_function__ internals>:2(sum)
     9831    2.184    0.000    2.756    0.000 pdqn.py:362(_invert_gradients)
   137634    2.598    0.000    2.598    0.000 {built-in method norm}
    19662    0.117    0.000    2.534    0.000 clip_grad.py:27(<listcomp>)
   235944    2.412    0.000    2.412    0.000 {method 'mul_' of 'torch._C._TensorBase' objects}
   235944    2.396    0.000    2.396    0.000 {method 'add_' of 'torch._C._TensorBase' objects}
   542471    0.699    0.000    2.381    0.000 fromnumeric.py:70(_wrapreduction)
   445647    0.462    0.000    2.322    0.000 fromnumeric.py:2111(sum)
    29493    2.098    0.000    2.098    0.000 {built-in method repeat_interleave}
   985718    0.324    0.000    2.013    0.000 {method 'add' of 'set' objects}
   246055    1.872    0.000    1.872    0.000 {method 't' of 'torch._C._TensorBase' objects}
      396    0.191    0.000    1.870    0.005 de_train.py:81(Weighted_Offspring1)
  5545988    1.431    0.000    1.759    0.000 overrides.py:1083(<genexpr>)
      396    0.055    0.000    1.697    0.004 de_train.py:61(Success_Rate1)
      396    0.168    0.000    1.682    0.004 de_train.py:144(Best_Offspring2)
   588859    1.621    0.000    1.621    0.000 {method 'reduce' of 'numpy.ufunc' objects}
     9831    0.179    0.000    1.620    0.000 optimizer.py:167(zero_grad)
    29493    1.063    0.000    1.609    0.000 pdqn_multipass.py:13(rowsToDiag)
      112    0.004    0.000    1.579    0.014 __init__.py:1(<module>)
   117972    1.441    0.000    1.441    0.000 {method 'addcdiv_' of 'torch._C._TensorBase' objects}
    58986    1.339    0.000    1.339    0.000 {built-in method cat}
      396    0.051    0.000    1.326    0.003 de_train.py:114(Best_Offspring1)
   117972    1.311    0.000    1.311    0.000 {method 'sqrt' of 'torch._C._TensorBase' objects}
   117972    1.104    0.000    1.104    0.000 {method 'addcmul_' of 'torch._C._TensorBase' objects}
1415861/511283    0.982    0.000    1.103    0.000 module.py:1222(named_modules)
  1123/13    0.006    0.000    1.084    0.083 <frozen importlib._bootstrap>:986(_find_and_load)
  1123/13    0.003    0.000    1.084    0.083 <frozen importlib._bootstrap>:956(_find_and_load_unlocked)
  1075/12    0.004    0.000    1.079    0.090 <frozen importlib._bootstrap>:650(_load_unlocked)
   961/12    0.002    0.000    1.079    0.090 <frozen importlib._bootstrap_external>:777(exec_module)
  1508/14    0.001    0.000    1.075    0.077 <frozen importlib._bootstrap>:211(_call_with_frames_removed)
79131/19731    0.183    0.000    1.071    0.000 copy.py:128(deepcopy)
     9831    0.044    0.000    0.956    0.000 memory.py:61(sample)
        1    0.000    0.000    0.905    0.905 pdqn_multipass.py:100(__init__)
        1    0.000    0.000    0.900    0.900 pdqn.py:149(__init__)
        1    0.000    0.000    0.888    0.888 memory.py:51(__init__)
        5    0.100    0.020    0.888    0.178 memory.py:8(__init__)
   167295    0.212    0.000    0.847    0.000 container.py:159(__getitem__)
       34    0.787    0.023    0.787    0.023 {method 'astype' of 'numpy.ndarray' objects}
    19802    0.445    0.000    0.737    0.000 {method 'choice' of 'numpy.random.mtrand.RandomState' objects}
    29493    0.136    0.000    0.732    0.000 tensor.py:21(wrapped)
    10001    0.014    0.000    0.696    0.000 <__array_function__ internals>:2(std)
    10001    0.045    0.000    0.668    0.000 fromnumeric.py:3428(std)
    31998    0.266    0.000    0.659    0.000 de_train.py:52(count_success)
    10001    0.049    0.000    0.624    0.000 _methods.py:259(_std)
    39604    0.607    0.000    0.607    0.000 {method 'matmul' of 'torch._C._TensorBase' objects}
     9831    0.189    0.000    0.603    0.000 tensor.py:41(__deepcopy__)
   613/77    0.001    0.000    0.597    0.008 {built-in method builtins.__import__}
     6479    0.008    0.000    0.591    0.000 <__array_function__ internals>:2(median)
   167295    0.305    0.000    0.591    0.000 container.py:150(_get_abs_string_index)
     9900    0.199    0.000    0.582    0.000 wrappers.py:99(action)
     6479    0.010    0.000    0.576    0.000 function_base.py:3524(median)
    10001    0.316    0.000    0.572    0.000 _methods.py:194(_var)
     6479    0.022    0.000    0.566    0.000 function_base.py:3464(_ureduce)
     9831    0.068    0.000    0.553    0.000 functional.py:2637(mse_loss)
   117972    0.550    0.000    0.550    0.000 {method 'unsqueeze' of 'torch._C._TensorBase' objects}
  2938141    0.470    0.000    0.546    0.000 {built-in method builtins.getattr}
 1427/395    0.002    0.000    0.543    0.001 <frozen importlib._bootstrap>:1017(_handle_fromlist)
    49155    0.542    0.000    0.542    0.000 memory.py:22(get_batch)
   826970    0.519    0.000    0.540    0.000 module.py:765(__getattr__)
   137662    0.539    0.000    0.539    0.000 {method 'copy_' of 'torch._C._TensorBase' objects}
     6479    0.067    0.000    0.534    0.000 function_base.py:3614(_median)
2002284/1568745    0.370    0.000    0.512    0.000 {built-in method builtins.len}
     9901    0.035    0.000    0.502    0.000 de_train.py:32(select_samples)
   117966    0.310    0.000    0.498    0.000 tensor.py:955(grad)
    19662    0.303    0.000    0.433    0.000 tensor.py:513(__rdiv__)
    19662    0.431    0.000    0.431    0.000 {built-in method stack}
       14    0.188    0.013    0.428    0.031 __init__.py:2(<module>)
    29733    0.032    0.000    0.415    0.000 <__array_function__ internals>:2(prod)
     9901    0.010    0.000    0.391    0.000 distance.py:590(euclidean)
     9900    0.151    0.000    0.386    0.000 distance.py:2434(cdist)
     9901    0.036    0.000    0.381    0.000 distance.py:465(minkowski)
    10000    0.071    0.000    0.375    0.000 base.py:216(__call__)
        1    0.000    0.000    0.362    0.362 de_train.py:1(<module>)
    52327    0.035    0.000    0.355    0.000 <__array_function__ internals>:2(any)
     9831    0.230    0.000    0.351    0.000 {method 'random_integers' of 'numpy.random.mtrand.RandomState' objects}
    29733    0.044    0.000    0.345    0.000 fromnumeric.py:2912(prod)
    29493    0.134    0.000    0.343    0.000 __init__.py:28(_make_grads)
     9900    0.032    0.000    0.336    0.000 copy.py:209(_deepcopy_tuple)
   186917    0.330    0.000    0.330    0.000 {method 'to' of 'torch._C._TensorBase' objects}
     9831    0.322    0.000    0.322    0.000 {built-in method torch._C._nn.mse_loss}
   295210    0.320    0.000    0.320    0.000 {built-in method torch._C._get_tracing_state}
     9900    0.012    0.000    0.303    0.000 copy.py:210(<listcomp>)
  2635220    0.289    0.000    0.289    0.000 {built-in method torch._C._is_torch_function_enabled}
   120455    0.083    0.000    0.282    0.000 <__array_function__ internals>:2(where)
    29493    0.278    0.000    0.278    0.000 {built-in method zeros}
    29493    0.269    0.000    0.269    0.000 {built-in method arange}